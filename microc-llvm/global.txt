; ModuleID = 'MicroC'

@d = global i32 0
@fmti = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmts = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@tmp = private unnamed_addr constant [13 x i8] c"Hello World!\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %a = alloca i32
  store i32 2, i32* %a
  store i32 11, i32* @d
  %b = alloca i32
  store i32 10, i32* %b
  %a1 = load i32* %a
  %printf = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmti, i32 0, i32 0), i32 %a1)
  %b2 = load i32* %b
  %printf3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmti, i32 0, i32 0), i32 %b2)
  %d = load i32* @d
  %printf4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmti, i32 0, i32 0), i32 %d)
  %printf5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmts, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @tmp, i32 0, i32 0))
  ret i32 0
}
