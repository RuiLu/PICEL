; ModuleID = 'MicroC'

@test = global i32 0
@fmti = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmts = private unnamed_addr constant [4 x i8] c"%s\0A\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %a = alloca i32
  store i32 233, i32* %a
  %a1 = load i32, i32* %a
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmti, i32 0, i32 0), i32 %a1)
  store i32 666, i32* @test
  %test = load i32, i32* @test
  %printf2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmti, i32 0, i32 0), i32 %test)
  ret i32 0
}
